import socket
import RPi.GPIO as GPIO
import time
from AlphaBot2 import AlphaBot2

from rpi_ws281x import Adafruit_NeoPixel, Color

# LED strip configuration:
LED_COUNT      = 4      # Number of LED pixels.
LED_PIN        = 18      # GPIO pin connected to the pixels (must support PWM!).
LED_FREQ_HZ    = 800000  # LED signal frequency in hertz (usually 800khz)
LED_DMA        = 5       # DMA channel to use for generating signal (try 5)
LED_BRIGHTNESS = 255     # Set to 0 for darkest and 255 for brightest
LED_INVERT     = False   # True to invert the signal (when using NPN transistor le>
LED_CHANNEL    = 0

strip = Adafruit_NeoPixel(LED_COUNT, LED_PIN, LED_FREQ_HZ, LED_DMA, LED_INVERT, LED_BRIGHTNESS)
# Create NeoPixel object with appropriate configuration.
# Intialize the library (must be called once before other functions).
strip.begin()


strip.setPixelColor(0, Color(255, 0, 0))       #Red
strip.setPixelColor(1, Color(0, 255, 0))       #Green
strip.setPixelColor(2, Color(0, 0, 255))       #Blue
strip.setPixelColor(3, Color(255, 255, 0))     #Yellow
strip.show()

time.sleep(2)
strip.setPixelColor(0, Color(0, 0, 0))       #Red
strip.setPixelColor(1, Color(0, 0, 0))       #Green
strip.setPixelColor(2, Color(0, 0, 0))       #Blue
strip.setPixelColor(3, Color(0, 0, 0))       #Yellow
strip.show()


Ab = AlphaBot2()

CTR = 7
A = 8
B = 9
C = 10
D = 11
BUZ = 4

def beep_on():
	GPIO.output(BUZ,GPIO.HIGH)
def beep_off():
	GPIO.output(BUZ,GPIO.LOW)

GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)
GPIO.setup(CTR,GPIO.IN,GPIO.PUD_UP)
GPIO.setup(A,GPIO.IN,GPIO.PUD_UP)
GPIO.setup(B,GPIO.IN,GPIO.PUD_UP)
GPIO.setup(C,GPIO.IN,GPIO.PUD_UP)
GPIO.setup(D,GPIO.IN,GPIO.PUD_UP)
GPIO.setup(BUZ,GPIO.OUT)

host = '192.168.50.60' #Direcci√≥n IP del servidor en mi PC
port = 18482





s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((host,port))
decision = s.recv(1024)
print("Comando recibido*")

while decision:

	if decision.decode() == "G":
		print("GREEN")
		strip.setPixelColor(0, Color(0, 255, 0))       #Red
		strip.setPixelColor(1, Color(0, 255, 0))       #Green
		strip.setPixelColor(2, Color(0, 255, 0))       #Blue
		strip.setPixelColor(3, Color(0, 255, 0))     #Yellow
		strip.show()
	elif decision.decode() == "R":
		print("RED")
		strip.setPixelColor(0, Color(255, 0, 0))       #Red
		strip.setPixelColor(1, Color(255, 0, 0))       #Green
		strip.setPixelColor(2, Color(255, 0, 0))       #Blue
		strip.setPixelColor(3, Color(255, 0, 0))     #Yellow
		strip.show()
	elif decision.decode() == "B":
		print("BLUE")
		strip.setPixelColor(0, Color(0, 0, 255))       #Red
		strip.setPixelColor(1, Color(0, 0, 255))       #Green
		strip.setPixelColor(2, Color(0, 0, 255))       #Blue
		strip.setPixelColor(3, Color(0, 0, 255))     #Yellow
		strip.show()
	decision = s.recv(1024)

s.close()

